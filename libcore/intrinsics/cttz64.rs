#![feature(core, core_intrinsics)]
extern crate core;

#[cfg(test)]
mod tests {
    use core::intrinsics::cttz64;

    // pub fn cttz64(x: u64) -> u64;

    macro_rules! cttz64_test {
	($value:expr, $BITS:expr) => ({
	    let x: u64 = $value;
	    let result: u64 = unsafe { cttz64(x) };

	    assert_eq!(result, $BITS);
	})
    }

    #[test]
    fn cttz64_test1() {
	cttz64_test!(0x0000000000000001, 0);
	cttz64_test!(0x0000000000000002, 1);
	cttz64_test!(0x0000000000000004, 2);
	cttz64_test!(0x0000000000000008, 3);
	cttz64_test!(0x0000000000000010, 4);
	cttz64_test!(0x0000000000000020, 5);
	cttz64_test!(0x0000000000000040, 6);
	cttz64_test!(0x0000000000000080, 7);
	cttz64_test!(0x0000000000000100, 8);
	cttz64_test!(0x0000000000000200, 9);
	cttz64_test!(0x0000000000000400, 10);
	cttz64_test!(0x0000000000000800, 11);
	cttz64_test!(0x0000000000001000, 12);
	cttz64_test!(0x0000000000002000, 13);
	cttz64_test!(0x0000000000004000, 14);
	cttz64_test!(0x0000000000008000, 15);
	cttz64_test!(0x0000000000010000, 16);
	cttz64_test!(0x0000000000020000, 17);
	cttz64_test!(0x0000000000040000, 18);
	cttz64_test!(0x0000000000080000, 19);
	cttz64_test!(0x0000000000100000, 20);
	cttz64_test!(0x0000000000200000, 21);
	cttz64_test!(0x0000000000400000, 22);
	cttz64_test!(0x0000000000800000, 23);
	cttz64_test!(0x0000000001000000, 24);
	cttz64_test!(0x0000000002000000, 25);
	cttz64_test!(0x0000000004000000, 26);
	cttz64_test!(0x0000000008000000, 27);
	cttz64_test!(0x0000000010000000, 28);
	cttz64_test!(0x0000000020000000, 29);
	cttz64_test!(0x0000000040000000, 30);
	cttz64_test!(0x0000000080000000, 31);
	cttz64_test!(0x0000000100000000, 32);
	cttz64_test!(0x0000000200000000, 33);
	cttz64_test!(0x0000000400000000, 34);
	cttz64_test!(0x0000000800000000, 35);
	cttz64_test!(0x0000001000000000, 36);
	cttz64_test!(0x0000002000000000, 37);
	cttz64_test!(0x0000004000000000, 38);
	cttz64_test!(0x0000008000000000, 39);
	cttz64_test!(0x0000010000000000, 40);
	cttz64_test!(0x0000020000000000, 41);
	cttz64_test!(0x0000040000000000, 42);
	cttz64_test!(0x0000080000000000, 43);
	cttz64_test!(0x0000100000000000, 44);
	cttz64_test!(0x0000200000000000, 45);
	cttz64_test!(0x0000400000000000, 46);
	cttz64_test!(0x0000800000000000, 47);
	cttz64_test!(0x0001000000000000, 48);
	cttz64_test!(0x0002000000000000, 49);
	cttz64_test!(0x0004000000000000, 50);
	cttz64_test!(0x0008000000000000, 51);
	cttz64_test!(0x0010000000000000, 52);
	cttz64_test!(0x0020000000000000, 53);
	cttz64_test!(0x0040000000000000, 54);
	cttz64_test!(0x0080000000000000, 55);
	cttz64_test!(0x0100000000000000, 56);
	cttz64_test!(0x0200000000000000, 57);
	cttz64_test!(0x0400000000000000, 58);
	cttz64_test!(0x0800000000000000, 59);
	cttz64_test!(0x1000000000000000, 60);
	cttz64_test!(0x2000000000000000, 61);
	cttz64_test!(0x4000000000000000, 62);
	cttz64_test!(0x8000000000000000, 63);
    }
}
